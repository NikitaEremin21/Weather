from aiogram import types
from loader import dp
from keyboards.reply.reply_keyboards import get_main_keyboard
from aiogram.dispatcher import FSMContext
from states.states import RegistrationStates
from services.user_service import get_user_by_telegram_id, register_user
from sqlalchemy.ext.asyncio import AsyncSession
from loader import bot
from loader import storage
from config_data.config import POSTGRES_URL
from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy.orm import sessionmaker


engine = create_async_engine(POSTGRES_URL)
AsyncSessionLocal = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)


@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text='–ü—Ä–∏–≤–µ—Ç! üå¶Ô∏è –Ø –±–æ—Ç "Weather".\n\n'
                              '–Ø –∏—Å–ø–æ–ª—å–∑—É—é –¥–∞–Ω–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ "OpenWeather", —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å '
                              '–≤–∞–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ.\n'
                              '–Ø –º–æ–≥—É:\n\n'
                              ' ‚Ä¢ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç\n'
                              ' ‚Ä¢ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ 5 –¥–Ω–µ–π\n'
                              ' ‚Ä¢ –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –¥–∞—Ç—É.\n\n'
                              '–î–ª—è –Ω–∞—á–∞–ª–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é',
                         )
    await RegistrationStates.waiting_for_city.set()


@dp.message_handler(state=RegistrationStates.waiting_for_city)
async def process_city(message, state):
    city = message.text.strip()

    async with AsyncSessionLocal() as db:
        result = await register_user(message.from_user, city, db)
        if not result:
            await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
            await state.finish()
            return

    await message.answer(
        '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! ‚úÖ',
        reply_markup=get_main_keyboard()
    )
    await state.finish()

